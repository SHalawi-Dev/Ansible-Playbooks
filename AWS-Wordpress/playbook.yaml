---
- hosts: all
  become: true
  vars_files:
    - vars/default.yaml

  tasks:
    - name: Install prerequisites
      yum: update_cache=yes state=latest
      tags: [ system ]

    - name: Install amazon-linux-extras
      yum: name=amazon-linux-extras update_cache=yes state=installed
      tags: [ system ]

    - name: amazon-linux-extras enable php7.4
      become: true
      command: amazon-linux-extras enable php7.4
      tags: [ system ]


    - name: Install PHP7.4 amazon, MariaDB and Apache Packages
      yum: name={{ item }} update_cache=yes state=latest
      loop: [ 'httpd', 'mariadb-server', 'php', 'MySQL-python']
      tags: [ system ]

    - name: Install PHP Extensions
      yum: name={{ item }} update_cache=yes state=installed
      loop: "{{ php_modules }}"
      tags: [ system ]

  # Apache Configuration
    - name: Start httpd service and enable it
      service:
        name: httpd
        enabled: true
        state: started

    - name: Create document root
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        owner: "apache"
        group: "apache"
        mode: '0755'
      tags: [ apache ]

    - name: Set up Apache VirtualHost
      template:
        src: "files/apache.conf.j2"
        dest: "/etc/httpd/conf.d/{{ http_conf }}"
      notify: Reload Apache
      tags: [ apache ,apache-conf]

    - name: Comment default welcome site
      template:
        src: "files/welcome.conf.j2"
        dest: "/etc/httpd/conf.d/welcome.conf"
      notify: Reload Apache
      tags: [ apache, apache-conf ] 

    # - name: Enable rewrite module
    #   shell: /usr/sbin/a2enmod rewrite
    #   notify: Reload Apache
    #   tags: [ apache ]

    # - name: Enable new site
    #   shell: /usr/sbin/a2ensite {{ http_conf }}
    #   notify: Reload Apache
    #   tags: [ apache ]

    # - name: Disable default Apache site
    #   shell: /usr/sbin/a2dissite 000-default.conf
    #   notify: Restart Apache
    #   tags: [ apache ]

  # MySQL Configuration
    - name: Reload MariaDB service and enable it
      service:
          name: mariadb
          enabled: true
          state: started

    - name: Set the root password
      mysql_user:
        name: root
        password: "{{ mysql_root_password }}"
        login_unix_socket: /var/lib/mysql/mysql.sock
      tags: [ mysql, mysql-root ]

    - name: Remove all anonymous user accounts
      mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
      tags: [ mysql ]

    - name: Remove the MySQL test database
      mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
      tags: [ mysql ]

    - name: Creates database for WordPress
      mysql_db:
        name: "{{ mysql_db }}"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
      tags: [ mysql ]

    - name: Create MySQL user for WordPress
      mysql_user:
        name: "{{ mysql_user }}"
        password: "{{ mysql_password }}"
        priv: "{{ mysql_db }}.*:ALL"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
      tags: [ mysql ]

  # # UFW Configuration
  #   - name: "UFW - Allow HTTP on port {{ http_port }}"
  #     ufw:
  #       rule: allow
  #       port: "{{ http_port }}"
  #       proto: tcp
  #     tags: [ system ]

  # WordPress Configuration
    - name: Download and unpack latest WordPress
      unarchive:
        src: https://wordpress.org/latest.tar.gz
        dest: "/var/www/{{ http_host }}"
        remote_src: yes
        creates: "/var/www/{{ http_host }}/wordpress"
      tags: [ wordpress ]

    - name: Set ownership
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        recurse: yes
        owner: apache
        group: apache
      tags: [ wordpress ]

    - name: Set permissions for directories
      shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type d -exec chmod 750 {} \\;"
      tags: [ wordpress ]

    - name: Set permissions for files
      shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type f -exec chmod 640 {} \\;"
      tags: [ wordpress ]

    - name: Set up wp-config
      template:
        src: "files/wp-config.php.j2"
        dest: "/var/www/{{ http_host }}/wordpress/wp-config.php"
      tags: [ wordpress, wordpress-conf ]

  handlers:
    - name: Reload Apache
      service:
        name: httpd
        state: reloaded

    - name: Restart Apache
      service:
        name: httpd
        state: restarted